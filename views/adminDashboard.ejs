<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Meeting Scheduler</title>
    <link rel="stylesheet" href="/css/dashboard.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
</head>
<body>
    <%- include('adminMeetingsNavbar.ejs') %>
    <div class="container">
        <h1>ASFIMeet Events</h1>
        <div class="createMeetingForm">
            <input type="text" id="meetingName" placeholder="Enter meeting name">
            <input type="datetime-local" id="meetingTime" placeholder="Enter meeting time">

            <div class="radioContainer">
                <div class="radio-group">
                    <input type="radio" id="publicMeeting" name="isPrivate" value="no" checked>
                    <label for="publicMeeting">Public</label>
                </div>
                <div class="radio-group">
                    <input type="radio" id="privateMeeting" name="isPrivate" value="yes">
                    <label for="privateMeeting">Private</label>
                </div>
            </div>

            <button onclick="addMeeting()">Create Meeting</button>
        </div>
        <h3>Upcoming Meetings</h3>

        <div class="meetings" id="meetingList">
            <% if(publicMeetings && publicMeetings.length > 0) { %>
                <% publicMeetings.forEach(function(meeting) { %>
                    <div class="meeting-item">
                        <p><strong><%= meeting.title %></strong> - <%= new Date(meeting.time).toLocaleString() %></p>
                        
                        <div class="meetingsControlsContainer">
                    
                        <a href="/join/<%= meeting.channel %>"><button ><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128" style="enable-background:new 0 0 128 128" xml:space="preserve" width="15" height="15"><path style="fill:#ffffff" d="M36.097 119.813C19.356 109.769 8.169 92.975 5.404 73.734l5.86-.842c2.51 17.47 12.672 32.722 27.877 41.845l-3.044 5.076zm91.443-46.078-5.858-.842c-2.478 17.222-12.44 32.353-27.334 41.511l3.102 5.043c16.395-10.082 27.361-26.744 30.09-45.712zM69.226 5.92c9.259 0 18.115 2.097 26.322 6.235l2.663-5.286C89.172 2.311 79.42 0 69.226 0 59.033 0 49.28 2.311 40.237 6.87l2.665 5.286C51.111 8.018 59.967 5.92 69.226 5.92zM127.8 64.2v-6.836c0-3.703-12.532-9.114-22.786-9.114s-22.786 5.412-22.786 9.114V64.2H127.8zm-22.785-47.851c-5.891 0-11.393 4.775-11.393 10.666v8.29c0 5.891 5.502 10.666 11.393 10.666 5.891 0 11.393-4.775 11.393-10.666v-8.29c0-5.891-5.503-10.666-11.393-10.666zM86.786 128v-6.836c0-3.703-12.532-9.114-22.786-9.114s-22.786 5.412-22.786 9.114V128h45.572zM64 80.15c-5.891 0-11.393 4.775-11.393 10.666v8.29c0 5.891 5.502 10.666 11.393 10.666 5.891 0 11.393-4.775 11.393-10.666v-8.29c0-5.891-5.502-10.666-11.393-10.666zM45.771 64.2v-6.836c0-3.703-12.532-9.114-22.786-9.114S.2 53.661.2 57.364V64.2h45.571zM22.985 16.349c-5.891 0-11.393 4.775-11.393 10.666v8.29c0 5.891 5.502 10.666 11.393 10.666 5.891 0 11.393-4.775 11.393-10.666v-8.29c0-5.891-5.502-10.666-11.393-10.666z"/></svg></button></a>
                        <button id="/join/<%= meeting.channel %>">Copy Link</button>
                            <button onclick="addToCalendar('<%= meeting.title %>', '<%= new Date(meeting.time).toISOString() %>')"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25 25" width="15" height="15"><defs><style>.cls-1{fill:#ffffff}</style></defs><g id="calendar_add" data-name="calendar add"><path class="cls-1" d="M22.5 3H21V2a1 1 0 0 0-1-1h-1a1 1 0 0 0-1 1v1h-4V2a1 1 0 0 0-1-1h-1a1 1 0 0 0-1 1v1H7V2a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1v1H2.5A1.5 1.5 0 0 0 1 4.5v18A1.5 1.5 0 0 0 2.5 24h20a1.5 1.5 0 0 0 1.5-1.5v-18A1.5 1.5 0 0 0 22.5 3zM19 2h1v3h-1zm-7 0h1v3h-1zM5 2h1v3H5zM2.5 4H4v1a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1V4h4v1a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1V4h4v1a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1V4h1.5a.5.5 0 0 1 .5.5V8H2V4.5a.5.5 0 0 1 .5-.5zm20 19h-20a.5.5 0 0 1-.5-.5V9h21v13.5a.5.5 0 0 1-.5.5z"/><path class="cls-1" d="M16 15.5h-3v-3a.5.5 0 0 0-1 0v3H9a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1z"/></g></svg></button>
                        <button onclick="deleteMeeting('<%= meeting.id %>')" class="deleteMeeting"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="15" height="15" fill="#ffffff"><path d="M5.755 20.283 4 8h16l-1.755 12.283A2 2 0 0 1 16.265 22h-8.53a2 2 0 0 1-1.98-1.717zM21 4h-5V3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v1H3a1 1 0 0 0 0 2h18a1 1 0 0 0 0-2z"/></svg></button>

                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <p>No upcoming meetings.</p>
            <% } %>
        </div>
    </div>

    <script>
        function addMeeting() {
            const name = document.getElementById('meetingName').value;
            const meetingTime = document.getElementById('meetingTime').value;

            if (!name) {
                alert("Please enter a meeting name.");
                return;
            }
            if (!meetingTime) {
                alert("Please select a meeting time.");
                return;
            }

            const formattedTime = new Date(meetingTime).toISOString(); // Send in UTC format
            const displayTime = new Date(meetingTime).toLocaleString(); // Display in user's timezone
            const isPrivate = document.querySelector('input[name="isPrivate"]:checked').value;

            const meetingData = {
                title: name,
                time: formattedTime,
                isPrivate: isPrivate
            };

            fetch('/createMeeting', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(meetingData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    console.log('Meeting created successfully');

                    const meetingList = document.getElementById('meetingList');
                    const meetingItem = document.createElement('div');
                    meetingItem.classList.add('meeting-item');

                    meetingItem.innerHTML = `
                        <p><strong>${name}</strong> - ${displayTime}</p>
                        <div class="meetingsControlsContainer">
                            <a href="/join/${data.channel}"><button >Start Meeting</button></a>
                            <button id="/join/${data.channel}">Copy Link</button>
                        <button onclick="addToCalendar('${name}', '${formattedTime}')">Add to Calendar</button>
                        <button onclick="deleteMeeting('${data.meetingId}')" class="deleteMeeting">Delete Meeting</button>
                        </div>
                        
                    `;

                    meetingList.prepend(meetingItem);
                    document.getElementById('meetingName').value = '';
                    document.getElementById('meetingTime').value = '';
                } else {
                    alert(data.error);
                    console.error('Error creating meeting:', data.error);
                }
            })
            .catch(error => {
                alert("Error creating meeting. Please try again.");
                console.error('Error:', error);
            });
        }

        function addToCalendar(title, date) {
            const formattedDate = date.replace(/-|:|\.\d{3}/g, ""); // Format for Google Calendar
            const calendarLink = `https://www.google.com/calendar/render?action=TEMPLATE&text=${encodeURIComponent(title)}&dates=${formattedDate}/${formattedDate}`;
            window.open(calendarLink, '_blank');
        }
        function deleteMeeting(meeting){
            fetch('/deleteMeeting', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ Id:meeting})
            })
            .then(response => response.json())
            .then(data => {
                console.log(data)
                if (data.success) {
                    console.log('Meeting deleted successfully');
                    const meetingItem = document.querySelector(`.meeting-item:has(button[onclick*="${meeting}"])`);
                    if (meetingItem) {
                        meetingItem.remove();
                    }
                } else {
                    alert(data.error);
                    console.error('Error deleting meeting:', data.error);
                }
            })
            .catch(error => {
                alert("Error deleting meeting. Please try again.");
                console.error('Error:', error);
            });
        }
    </script>
</body>
</html>
