<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Screen Recorder</title>
</head>
<body>

    <button id="startRecording">Start Recording</button>
    <button id="stopRecording" disabled>Stop Recording</button>

    <script>
        let mediaRecorder;
        let recordedChunks = [];

        async function startRecording() {
            try {
                // Capture the entire screen (including the browser window)
                const screenStream = await navigator.mediaDevices.getDisplayMedia({
                    video: { frameRate: 30 },
                    audio: { systemAudio: "include" }
                });

                // Capture microphone audio separately
                const micStream = await navigator.mediaDevices.getUserMedia({ audio: true });

                // Combine both audio and video streams
                const audioTracks = [...screenStream.getAudioTracks(), ...micStream.getAudioTracks()];
                const combinedStream = new MediaStream([...screenStream.getVideoTracks(), ...audioTracks]);

                // Start recording
                mediaRecorder = new MediaRecorder(combinedStream, { mimeType: "video/webm" });

                mediaRecorder.ondataavailable = (event) => {
                    if (event.data.size > 0) {
                        recordedChunks.push(event.data);
                    }
                };

                mediaRecorder.onstop = () => {
                    // Create a Blob from recorded chunks
                    const recordedBlob = new Blob(recordedChunks, { type: "video/webm" });

                    // Automatically download the video
                    const downloadLink = document.createElement("a");
                    downloadLink.href = URL.createObjectURL(recordedBlob);
                    downloadLink.download = `screen-recording-${Date.now()}.webm`;
                    document.body.appendChild(downloadLink);
                    downloadLink.click();
                    document.body.removeChild(downloadLink);
                };

                mediaRecorder.start();
                document.getElementById("startRecording").disabled = true;
                document.getElementById("stopRecording").disabled = false;
            } catch (err) {
                console.error("Error capturing screen:", err);
            }
        }

        function stopRecording() {
            if (mediaRecorder) {
                mediaRecorder.stop();
            }
            document.getElementById("startRecording").disabled = false;
            document.getElementById("stopRecording").disabled = true;
        }

        document.getElementById("startRecording").addEventListener("click", startRecording);
        document.getElementById("stopRecording").addEventListener("click", stopRecording);
    </script>

</body>
</html>
